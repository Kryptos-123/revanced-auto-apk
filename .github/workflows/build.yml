name: Build APKs
on: [workflow_call, workflow_dispatch]

jobs:
  run:
    name: Build APKs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Get last tag
        id: last_tag
        uses: oprypin/find-latest-tag@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          releases-only: true

      - name: Get next version code
        id: next_ver_code
        run: |
          TAG="${{ steps.last_tag.outputs.tag }}"
          if [ -z "$TAG" ]; then TAG=0; fi
          echo "NEXT_VER_CODE=$((TAG + 1))" >> $GITHUB_OUTPUT

      - name: Build modules/APKs
        run: ./build.sh
        env:
          GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          NEXT_VER_CODE: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}

      - name: Get output
        id: get_output
        run: |
          DELIM="$(openssl rand -hex 8)"
          echo "BUILD_LOG<<${DELIM}" >> "$GITHUB_OUTPUT"
          cat build.md >> "$GITHUB_OUTPUT"
          echo "${DELIM}" >> "$GITHUB_OUTPUT"
          cp -f build.md build.tmp

          cd build
          echo "RELEASE_NAME=ReVanced APKs" >> $GITHUB_OUTPUT

      - name: Upload modules to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ steps.get_output.outputs.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/*
          release_name: ${{ steps.get_output.outputs.RELEASE_NAME }}
          tag: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}
          file_glob: true
          overwrite: true

      - name: Switch to update branch
        run: git checkout -f update || git switch --discard-changes --orphan update

      - name: Update changelog
        id: update_config
        run: |
          echo "${{ steps.get_output.outputs.BUILD_LOG }}" > build.tmp
          cp -f build.tmp build.md
          get_update_json() {
            echo "{
            \"version\": \"$1\",
            \"versionCode\": $2,
            \"zipUrl\": \"$3\",
            \"changelog\": \"https://raw.githubusercontent.com/$GITHUB_REPOSITORY/update/build.md\"
          }"
          }

          find . -name "*.json" | grep . || : >dummy.json

      - name: "Auto commit changes"
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: update
          skip_checkout: true
          file_pattern: build.md *.json
          commit_message: Bump version ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}

      - name: Delete Older Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 2
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
