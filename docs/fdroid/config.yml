---
# Copy this file to config.yml, then amend the settings below according to
# your system configuration.

# Custom path to the Android SDK, defaults to $ANDROID_HOME
sdk_path: /opt/android-sdk



# Paths to installed versions of the Android NDK.  This will be
# automatically filled out from well known sources like
# $ANDROID_HOME/ndk-bundle and $ANDROID_HOME/ndk/*.  If a required
# version is missing in the buildserver VM, it will be automatically
# downloaded and installed into the standard $ANDROID_HOME/ndk/
# directory.  Manually setting it here will override the auto-detected
# values.  The keys can either be the "release" (e.g. r21e) or the
# "revision" (e.g. 21.4.7075529).
#
# ndk_paths:
#   r10e: $ANDROID_HOME/android-ndk-r10e
#   r17: ""
#   21.4.7075529: ~/Android/Ndk
#   r22b: null

# Directory to store downloaded tools in (i.e. gradle versions)
# By default, these are stored in ~/.cache/fdroidserver
# cachedir: cache

# Specify paths to each major Java release that you want to support
# java_paths:
#   8: /usr/lib/jvm/java-8-openjdk

# Command or path to binary for running Ant
# ant: ant

# Command or path to binary for running maven 3
# mvn3: mvn

# Command or path to binary for running Gradle
# Defaults to using an internal gradle wrapper (gradlew-fdroid).
# gradle: gradle

# Always scan the APKs produced by `fdroid build` for known non-free classes
# scan_binary: true

# Set the maximum age (in days) of an index that a client should accept from
# this repo. Setting it to 0 or not setting it at all disables this
# functionality. If you do set this to a non-zero value, you need to ensure
# that your index is updated much more frequently than the specified interval.
# The same policy is applied to the archive repo, if there is one.
# repo_maxage: 0

repo_url: https://kryptos-123.github.io/revanced-extended/fdroid/repo/
repo_name: Test
# repo_description: >-
#   This is a repository of apps to be used with F-Droid. Applications
#   in this repository are either official binaries built by the
#   original application developers, or are binaries built from source
#   by the admin of f-droid.org using the tools on
#   https://gitlab.com/fdroid.

# As above, but for the archive repo.
#
# archive_url: https://f-droid.org/archive
# archive_name: My First F-Droid Archive Demo
# archive_description: >-
#   The repository of older versions of packages from the main demo repository.

# archive_older sets the number of versions kept in the main repo, with all
# older ones going to the archive. Set it to 0, and there will be no archive
# repository, and no need to define the other archive_ values.
#
# archive_older: 3

# The repo's icon defaults to a file called 'icon.png' in the 'icons'
# folder for each section, e.g. repo/icons/icon.png and
# archive/icons/icon.png.  To use a different filename for the icons,
# set the filename here.  You must still copy it into place in
# repo/icons/ and/or archive/icons/.
#
# repo_icon: myicon.png
# archive_icon: myicon.png

# This allows a specific kind of insecure APK to be included in the
# 'repo' section.  Since April 2017, APK signatures that use MD5 are
# no longer considered valid, jarsigner and apksigner will return an
# error when verifying.  `fdroid update` will move APKs with these
# disabled signatures to the archive.  This option stops that
# behavior, and lets those APKs stay part of 'repo'.
#
# allow_disabled_algorithms: true

# Normally, all apps are collected into a single app repository, like on
# https://f-droid.org. For certain situations, it is better to make a repo
# that is made up of APKs only from a single app. For example, an automated
# build server that publishes nightly builds.
# per_app_repos: true

# `fdroid update` will create a link to the current version of a given app.
# This provides a static path to the current APK. To disable the creation of
# this link, uncomment this:
# make_current_version_link: false

# By default, the "current version" link will be based on the "Name" of the
# app from the metadata. You can change it to use a different field from the
# metadata here:
# current_version_name_source: packageName

# Optionally, override home directory for gpg
# gpghome: /home/fdroid/somewhere/else/.gnupg

# The ID of a GPG key for making detached signatures for APKs. Optional.
# gpgkey: 1DBA2E89

# The key (from the keystore defined below) to be used for signing the
# repository itself. This is the same name you would give to keytool or
# jarsigner using -alias. (Not needed in an unsigned repository).
repo_keyalias: repokey



# Optionally, the public key for the key defined by repo_keyalias above can
# be specified here. There is no need to do this, as the public key can and
# will be retrieved from the keystore when needed. However, specifying it
# manually can allow some processing to take place without access to the
# keystore.
# repo_pubkey: ...

# The keystore to use for release keys when building. This needs to be
# somewhere safe and secure, and backed up!  The best way to manage these
# sensitive keys is to use a "smartcard" (aka Hardware Security Module). To
# configure F-Droid to use a smartcard, set the keystore file using the keyword
# "NONE" (i.e. keystore: "NONE"). That makes Java find the keystore on the
# smartcard based on 'smartcardoptions' below.
keystore: keystore.p12



# You should not need to change these at all, unless you have a very
# customized setup for using smartcards in Java with keytool/jarsigner
keypass: "160906"
keystorepass: "160906"
